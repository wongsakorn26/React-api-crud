version: '3.3'
services:
  server:
    build: ./server
    container_name: server_api_c
    ports:
      - '2000:2000'
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules  # ปรับ path ของ node_modules
    depends_on:
      - db  # เปลี่ยนชื่อ service จาก mysql เป็น db เพื่อให้ตรงกับชื่อ service ของ MySQL
    

  react:
    build: ./react
    container_name: myreactapp_c
    ports:
      - '3000:3000'
    volumes:
      - ./react:/usr/src/app
      - /usr/src/app/node_modules  # ปรับ path ของ node_modules
    stdin_open: true
    tty: true
    depends_on:
      - server
  db:
    container_name: db
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: MYSQL_DATABASE
      MYSQL_USER: MYSQL_USER
      MYSQL_PASSWORD: MYSQL_PASSWORD
    ports:
      - "9906:3306"
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8000:80"
    restart: always
    environment:
      PMA_HOST: db
    depends_on:
      - db
      

  # db:
  #   container_name: mysqldb
  #   image: mysql
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: root
    
  #   volumes:
  #     - ./mysql-data/8.0.23:/var/lib/mysql
  #   ports:
  #     - 3306:3306
  #   expose:
  #     - 3306

  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: phpmyadmin-mysql
  #   depends_on:
  #     - db
  #   restart: always
  #   environment:
  #     PMA_HOST: db
  #     PMA_PORT: 3306
  #     PMA_USER: root
  #     PMA_PASSWORD: root
  #   ports:
  #     - 8080:80

  # db:
  #   image: mysql:latest
  #   container_name: db
  #   volumes:
  #     - db_data:/var/lib/mysql
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: mydb  # ต้องการให้ MySQL สร้างฐานข้อมูลที่ชื่อ "root"
  #     MYSQL_ROOT_HOST: db
  #   ports:
  #     - 3306:3306
#   adminer:
#     image: adminer
#     restart: always
#     ports:
#       - 8080:8080
volumes:
  db_data: {}